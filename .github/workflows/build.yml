# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
      - readme.md
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ⚙ dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: 🙏 build
        run: dotnet build -m:1 -p:VersionLabel="$GITHUB_REF.$GITHUB_RUN_NUMBER"

      - name: 🧪 test
        run: dotnet test --no-build -m:1
        env:
          Amazon__AccessKey: ${{ secrets.AMAZON__ACCESSKEY }}
          Amazon__SecretKey: ${{ secrets.AMAZON__SECRETKEY }}
          Azure__SpeechKey: ${{ secrets.AZURE__SPEECHKEY }}
          Azure__SpeechRegion: ${{ secrets.AZURE__SPEECHREGION }}
          Google__ApiKey: ${{ secrets.GOOGLE__APIKEY }}

      - name: 📦 pack
        run: dotnet pack -m:1 -p:VersionLabel="$GITHUB_REF.$GITHUB_RUN_NUMBER"

      # Only push CI package to sleet feed if building on ubuntu (fastest)
      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: matrix.os == 'ubuntu-latest' && env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"

      - name: ✓ ensure format
        run: dotnet format --verify-no-changes -v:diag --exclude ~/.nuget
